<?php

/**
 * Implements hook_field_extra_fields().
 */

function extra_fields_field_extra_fields() {
  $extra = array();
  foreach (node_type_get_types() as $type) {
    if ($type->has_title) {
      $extra['node'][$type->type]['display']['title'] = array(
        'label' => t('Extra field: !title', array('!title' => $type->title_label)),
        'weight' => -4,
        'type' => 'hidden',
      );
    }
    if($type->type == 'core_department'){
      $extra['node'][$type->type]['display']['core_link'] = array(
        'label' => t('Extra field: Core Dept Link'),
        'weight' => -4,
        'type' => 'hidden',
      ); 
    }
    if($type->type == 'research'){
      $extra['node'][$type->type]['display']['research_themes'] = array(
        'label' => t('Extra field: Research Themes'),
        'weight' => -4,
        'type' => 'hidden',
      ); 
    }
    if($type->type == 'research_lead'){
      $extra['node'][$type->type]['display']['lead_summary'] = array(
        'label' => t('Extra field: Lead Summary'),
        'weight' => -4,
        'type' => 'hidden',
      ); 
    }
    if($type->type == 'person' || $type->type == 'research'){
      $extra['node'][$type->type]['display']['web_url'] = array(
        'label' => t('Extra field: Link to site'),
        'weight' => -4,
        'type' => 'hidden',
      ); 
    }
    if($type->type == 'event'){
      $extra['node'][$type->type]['display']['time_only'] = array(
        'label' => t('Extra field: Time Only'),
        'weight' => -4,
        'type' => 'hidden',
      ); 
      $extra['node'][$type->type]['display']['event_detail'] = array(
        'label' => t('Extra field: Link to detail'),
        'weight' => -4,
        'type' => 'hidden',
      ); 
      $extra['node'][$type->type]['display']['add_this'] = array(
        'label' => t('Extra field: Add to Calendar'),
        'weight' => 4,
        'type' => 'hidden',
      );
    }
    if($type->type == 'person' || $type->type == 'research' || $type->type == 'event' || $type->type == 'facilities'){
      $extra['node'][$type->type]['display']['back_to'] = array(
        'label' => t('Extra field: Back to'),
        'weight' => -4,
        'type' => 'hidden',
      ); 
    }
  }
 
  return $extra;
}

/**
 * Implements hook_node_view().
 */
function extra_fields_node_view($node, $view_mode, $langcode) {
  // only return this in a non-full page situation
  if (!in_array($view_mode, array('default', 'full'))) {
    $node->content['title'] = array(
      '#theme' => 'extra_fields_title',
      '#node' => $node,
      '#view_mode' => $view_mode,
    ); 
  }
  if (in_array($view_mode, array('default', 'full'))) {
    $node->content['title'] = array(
      '#theme' => 'extra_fields_title_nolink',
      '#node' => $node,
      '#view_mode' => $view_mode,
    );  
  }
  $node->content['core_link'] = array(
      '#theme' => 'extra_fields_core_link',
      '#node' => $node,
      '#view_mode' => $view_mode,
  ); 
  if($node->type == 'research_lead'){
     $node->content['lead_summary'] = array(
        '#theme' => 'extra_fields_lead_summary',
        '#node' => $node,
        '#view_mode' => $view_mode,
    );  
  }
  if($node->type == 'research'){
     $node->content['research_themes'] = array(
        '#theme' => 'extra_fields_research_themes',
        '#node' => $node,
        '#view_mode' => $view_mode,
    );  
  }
  if($node->type == 'person' || $node->type == 'research'){
    $node->content['web_url'] = array(
        '#theme' => 'extra_fields_web_url',
        '#node' => $node,
        '#view_mode' => $view_mode,
    ); 
  }
  if($node->type == 'event'){
    $node->content['time_only'] = array(
        '#theme' => 'extra_fields_time_only',
        '#node' => $node,
        '#view_mode' => $view_mode,
    ); 
    $node->content['event_detail'] = array(
        '#theme' => 'extra_fields_event_detail',
        '#node' => $node,
        '#view_mode' => $view_mode,
    );
  }
  if ($node->type == 'event') {
      $node->content['add_this'] = array(
      '#theme' => 'extra_fields_add_this',
      '#node' => $node,
      '#view_mode' => $view_mode,
    ); 
  }
  if (($node->type == 'person' || $node->type == 'research' || $node->type == 'event' || $node->type == 'facilities') && in_array($view_mode, array('default', 'full'))) {
      $node->content['back_to'] = array(
      '#theme' => 'extra_fields_back_to',
      '#node' => $node,
      '#view_mode' => $view_mode,
    ); 
  }
}

/**
 * Implements hook_theme().
 */
function extra_fields_theme($existing, $type, $theme, $path) {
  return array(
    'extra_fields_title' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),
    'extra_fields_title_nolink' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),   
    'extra_fields_core_link' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),    
    'extra_fields_web_url' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),    
    'extra_fields_research_themes' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),     
    'extra_fields_lead_summary' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),    
    'extra_fields_time_only' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),     
    'extra_fields_event_detail' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),
    'extra_fields_add_this' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),
    'extra_fields_back_to' => array(
      'variables' => array('node' => NULL, 'view_mode' => NULL),
    ),
  );
}

function theme_extra_fields_title($variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];
  $entity_uri = entity_uri('node', $node);
  $link_title = l($node->title, $entity_uri['path']);
  if($node->type == 'undergraduate'){
      $grad_year = $node->field_grad_year[LANGUAGE_NONE][0]['value'];
      if(isset($grad_year)){
          $grad_year = " '" . format_date(strtotime($grad_year), 'short_year');
      }
      $link_title = t($node->title . $grad_year);
  }
  if($node->type == 'funding'){
      $link_title = t($node->title);
  }
  if($node->type == 'core_department'){
      if(!empty($node->field_dept_website)){
        $dept_url = $node->field_dept_website[LANGUAGE_NONE][0]['url'];
        $link_title = l($node->title, $dept_url, array('attributes' => array('target'=>'_blank')));
      }else{
        $link_title = t($node->title); 
      }    
  }
  if($node->type == 'centers_initiatives'){
      if(!empty($node->field_centers_website_url)){
        $affiliate_url = $node->field_centers_website_url[LANGUAGE_NONE][0]['url'];
        $link_title = l($node->title, $affiliate_url, array('attributes' => array('target'=>'_blank')));
      }else{
        $link_title = t($node->title); 
      }
  }
  if($node->type == 'training_card'){
      if(!empty($node->field_training_link)){
        $training_url = $node->field_training_link[LANGUAGE_NONE][0]['url'];
        $link_title = l($node->title, $training_url);
      }else{
        $link_title = t($node->title); 
      }
  }
  if($node->type == 'discover_cards'){
      if(!empty($node->field_discover_link)){
        $discover_url = $node->field_discover_link[LANGUAGE_NONE][0]['url'];
        $link_title = l($node->title, $discover_url);
      }else{
        $link_title = t($node->title); 
      }
  }
  if($node->type == 'home_slide'){
      if(!empty($node->field_home_slide_link)){
        $slide_url = $node->field_home_slide_link[LANGUAGE_NONE][0]['url'];
        if(isset($node->field_home_slide_link[LANGUAGE_NONE][0]['attributes']['target'])){
            $link_title = l($node->title, $slide_url, array('attributes' => array('target'=>'_blank')));
        }else{
            $link_title = l($node->title, $slide_url);
        }
      }else{
        $link_title = t($node->title); 
      }
  }
  
  $output = '<h2 class="node-title">';
  $output .= $link_title;
  $output .= '</h2>';
  return $output;
}

function theme_extra_fields_lead_summary($variables) {
  $node = $variables['node'];
  $name = $node->title;
  
  $output = '<span class="lead-item"><strong>' . $name . '.</strong></span>';
  
  $path_alias = drupal_get_path_alias('node/' . $node->nid);
  $output .= '<span class="lead-item">' . l('Other projects', $path_alias) . '.</span>';
  
  $profile_link = '';
  
  if(isset($node->field_url_to_brown_profile[LANGUAGE_NONE][0]['url'])){
      $output .= '<span class="lead-item">' . l('More about', $node->field_url_to_brown_profile[LANGUAGE_NONE][0]['url'], array('attributes' => array('target'=>'_blank'))) . ' ' . $name . '.</span>';
  }
  
  return $output;
}

function theme_extra_fields_core_link($variables) {
  $node = $variables['node'];
  
  if(!empty($node->field_dept_website)){
      $url = $node->field_dept_website[LANGUAGE_NONE][0]['url'];
      $output = '<div class="core-dept-url">' . l('VISIT', $url, array('attributes' => array('target'=>'_blank'))) . ' Department website </div>';
      return $output;
  }
}
function theme_extra_fields_research_themes($variables) {
    $node = $variables['node'];
    $themes = array();
    $output = '';
    
    if(isset($node->field_research_theme)){
        $themes = $node->field_research_theme[LANGUAGE_NONE];
    }
    
    if(!empty($themes)){
        $output = '<div class="extra-fields-themes field-type-taxonomy-term-reference">';
        $output .= '<h2 class="field-label">Themes</h2>';
        $output .= '<ul>';
        foreach($themes as $theme){
            $term = taxonomy_term_load($theme['tid']);
            $output .= '<li>' . l($term->name, '/research/research-projects', array('query' => array('field_research_theme_tid' => $term->tid))) . '.</li>';
        }
        $output .= '</ul></div>';
    }
    
    return $output;
}
function theme_extra_fields_back_to($variables) {
  $node = $variables['node'];
  $type = $node->type;
  $link = '';
  switch($type){
      case 'person':
          $link = l('Back to People', '/about/people');
      break;
      case 'event':
          $link = l('Back to All Events', '/events');
      break;
      case 'research':
          $link = l('Back to Research Projects', '/research/research-projects');
      break;
      case 'facilities':
          $link = l('Back to Facilities', '/about/facilities');
      break;
  }
  $output = '<div class="back-to-link">' . $link . '</div>';
  return $output;
}
function theme_extra_fields_event_detail($variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];
  $entity_uri = entity_uri('node', $node);
  $link = l('Details', $entity_uri['path']);
  
  $output = '<div class="link-to-event">' . $link . '</div>';
  return $output;
}
function theme_extra_fields_time_only($variables) {
  $node = $variables['node'];
  if(!empty($node->field_event_date)){
      $date = strtotime($node->field_event_date[LANGUAGE_NONE][0]['value']);
      $time_only = format_date($date, 'time_only');
      $output = '<div class="time-only">' . $time_only . '</div>';
      return $output;
  }
}
function theme_extra_fields_web_url($variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];
  if($node->type == 'person' && !empty($node->field_website_url)){
      $url = $node->field_website_url[LANGUAGE_NONE][0]['url'];
      
      $fname = $node->field_first_name[LANGUAGE_NONE][0]['value'];
      $mname = '';
      if(!empty($node->field_middle_name)){
        $mname = ' ' . $node->field_middle_name[LANGUAGE_NONE][0]['value'];
      }
      $lname = ' ' . $node->field_last_name[LANGUAGE_NONE][0]['value'];
      
      if($view_mode == 'default' || $view_mode == 'full'){
        $link_text = 'VISIT ' . $fname . $mname . $lname .'\'s website';  
      }else{
        $link_text = 'More about ' . $fname . $mname . $lname;
      }
      
      $output = '<div class="person-web-url">' . l($link_text, $url, array('attributes' => array('target'=>'_blank'))) . '</div>';
      
      return $output;
  }
  if($node->type == 'research' && !empty($node->field_website_url)){
      $url = $node->field_website_url[LANGUAGE_NONE][0]['url'];   
      $output = '<div class="research-web-url">' . l('VISIT', $url, array('attributes' => array('target'=>'_blank'))) . ' project website</div>';
      
      return $output;
  }
}

function theme_extra_fields_title_nolink($variables) {
  $node = $variables['node'];
  $output = '<h2 class="node-title">';
  $output .= $node->title;
  $output .= '</h2>';
  return $output;
}

function theme_extra_fields_add_this($variables) {
  $node = $variables['node'];
  $eventTimeRaw = strtotime($node->field_event_date[LANGUAGE_NONE][0]['value']);
  $startDate = format_date($eventTimeRaw, $type = 'custom', $format='m/d/Y H:i');
  
  
  $output = '<div title="" class="addeventatc" id="addeventatc1" aria-controls="addeventatc1-drop" aria-expanded="false" tabindex="0" style="visibility: visible;"> Add to Calendar.';
  $output .= '<span class="timezone atc_node">America/New_York</span>';
  $output .= '<span class="title atc_node">' . $node->title . '</span>';
  $output .= '<span class="start atc_node">' . $startDate . '</span>';
  if(!empty($node->body)){
    $teaser = $node->body[LANGUAGE_NONE][0]['safe_value'];
    $output .= '<span class="description atc_node">' . $teaser. '</span>';
  }
  if(!empty($node->field_location)){
    $location = $node->field_location[LANGUAGE_NONE][0]['value'];
    $output .= '<span class="location atc_node">' . $location . '</span>';
  }
  $output .= '<span class="date_format atc_node">MM/DD/YYYY</span>';
  $output .= '</div>';
  return $output;
}

/* Extra Functions for processing output */

function get_news_type($node){
    if(!empty($node->field_spotlight)){
        $spotlight = taxonomy_term_load($node->field_spotlight[LANGUAGE_NONE][0]['tid']);
        $name = $spotlight->name;
        
        return '<strong>Spotlight</strong> on ' . $name;
        
    }else{
        return '<strong>BIBS</strong> update';
    }
}

/* Features implementation for exporting extra fields information */

/**
 * Implements hook_features_api.
 */
function extra_fields_features_api() {
  return array(
    'extra_fields' => array(
      'name' => t('Extra fields'),
      'default_hook' => 'extra_fields_info',
      'default_file' => FEATURES_DEFAULTS_INCLUDED,
      'features_source' => TRUE,
      'file' => drupal_get_path('module', 'extra_fields') .'/extra_fields.features.inc',
    ),
  );
}